/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  SyntheticsReader,
  SyntheticsReaderInterface,
} from "../SyntheticsReader";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getAccountOrders",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "cancellationReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialCollateralToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "swapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Order.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Order.OrderType",
                name: "orderType",
                type: "uint8",
              },
              {
                internalType: "enum Order.DecreasePositionSwapType",
                name: "decreasePositionSwapType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "sizeDeltaUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "initialCollateralDeltaAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "acceptablePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minOutputAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "validFromTime",
                type: "uint256",
              },
            ],
            internalType: "struct Order.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isLong",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isFrozen",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "autoCancel",
                type: "bool",
              },
            ],
            internalType: "struct Order.Flags",
            name: "flags",
            type: "tuple",
          },
        ],
        internalType: "struct Order.Props[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "contract IReferralStorage",
        name: "referralStorage",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "markets",
        type: "address[]",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices[]",
        name: "marketPrices",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "uiFeeReceiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getAccountPositionInfoList",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "account",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "market",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "collateralToken",
                    type: "address",
                  },
                ],
                internalType: "struct Position.Addresses",
                name: "addresses",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "sizeInUsd",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "sizeInTokens",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "collateralAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowingFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "fundingFeeAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "longTokenClaimableFundingAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortTokenClaimableFundingAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "increasedAtTime",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "decreasedAtTime",
                    type: "uint256",
                  },
                ],
                internalType: "struct Position.Numbers",
                name: "numbers",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "isLong",
                    type: "bool",
                  },
                ],
                internalType: "struct Position.Flags",
                name: "flags",
                type: "tuple",
              },
            ],
            internalType: "struct Position.Props",
            name: "position",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32",
                    name: "referralCode",
                    type: "bytes32",
                  },
                  {
                    internalType: "address",
                    name: "affiliate",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "trader",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "totalRebateFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "affiliateRewardFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "adjustedAffiliateRewardFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "traderDiscountFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "totalRebateAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "traderDiscountAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "affiliateRewardAmount",
                    type: "uint256",
                  },
                ],
                internalType:
                  "struct PositionPricingUtils.PositionReferralFees",
                name: "referral",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "traderTier",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "traderDiscountFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "traderDiscountAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct PositionPricingUtils.PositionProFees",
                name: "pro",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "fundingFeeAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "claimableLongTokenAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "claimableShortTokenAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "latestFundingFeeAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "latestLongTokenClaimableFundingAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "latestShortTokenClaimableFundingAmountPerSize",
                    type: "uint256",
                  },
                ],
                internalType: "struct PositionPricingUtils.PositionFundingFees",
                name: "funding",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "borrowingFeeUsd",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowingFeeAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowingFeeReceiverFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowingFeeAmountForFeeReceiver",
                    type: "uint256",
                  },
                ],
                internalType:
                  "struct PositionPricingUtils.PositionBorrowingFees",
                name: "borrowing",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "uiFeeReceiver",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "uiFeeReceiverFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "uiFeeAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct PositionPricingUtils.PositionUiFees",
                name: "ui",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "liquidationFeeUsd",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidationFeeAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidationFeeReceiverFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidationFeeAmountForFeeReceiver",
                    type: "uint256",
                  },
                ],
                internalType:
                  "struct PositionPricingUtils.PositionLiquidationFees",
                name: "liquidation",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "min",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "max",
                    type: "uint256",
                  },
                ],
                internalType: "struct Price.Props",
                name: "collateralTokenPrice",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "positionFeeFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "protocolFeeAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "positionFeeReceiverFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeReceiverAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeAmountForPool",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "positionFeeAmountForPool",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "positionFeeAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalCostAmountExcludingFunding",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalCostAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalDiscountAmount",
                type: "uint256",
              },
            ],
            internalType: "struct PositionPricingUtils.PositionFees",
            name: "fees",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "int256",
                name: "priceImpactUsd",
                type: "int256",
              },
              {
                internalType: "uint256",
                name: "priceImpactDiffUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionPrice",
                type: "uint256",
              },
            ],
            internalType: "struct ReaderPricingUtils.ExecutionPriceResult",
            name: "executionPriceResult",
            type: "tuple",
          },
          {
            internalType: "int256",
            name: "basePnlUsd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "uncappedBasePnlUsd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "pnlAfterPriceImpactUsd",
            type: "int256",
          },
        ],
        internalType: "struct ReaderPositionUtils.PositionInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getAccountPositions",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "collateralToken",
                type: "address",
              },
            ],
            internalType: "struct Position.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "sizeInUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sizeInTokens",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "collateralAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "borrowingFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fundingFeeAmountPerSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "longTokenClaimableFundingAmountPerSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shortTokenClaimableFundingAmountPerSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "increasedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "decreasedAtTime",
                type: "uint256",
              },
            ],
            internalType: "struct Position.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isLong",
                type: "bool",
              },
            ],
            internalType: "struct Position.Flags",
            name: "flags",
            type: "tuple",
          },
        ],
        internalType: "struct Position.Props[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
    ],
    name: "getAdlState",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "getDeposit",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialLongToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialShortToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "longTokenSwapPath",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "shortTokenSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Deposit.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "initialLongTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "initialShortTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minMarketTokens",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
            ],
            internalType: "struct Deposit.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
            ],
            internalType: "struct Deposit.Flags",
            name: "flags",
            type: "tuple",
          },
        ],
        internalType: "struct Deposit.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "longTokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shortTokenAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "uiFeeReceiver",
        type: "address",
      },
      {
        internalType: "enum ISwapPricingUtils.SwapPricingType",
        name: "swapPricingType",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "includeVirtualInventoryImpact",
        type: "bool",
      },
    ],
    name: "getDepositAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "address",
        name: "marketKey",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "indexTokenPrice",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "positionSizeInUsd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "positionSizeInTokens",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "sizeDeltaUsd",
        type: "int256",
      },
      {
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
    ],
    name: "getExecutionPrice",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "priceImpactUsd",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "priceImpactDiffUsd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "executionPrice",
            type: "uint256",
          },
        ],
        internalType: "struct ReaderPricingUtils.ExecutionPriceResult",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "address",
        name: "key",
        type: "address",
      },
    ],
    name: "getMarket",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "getMarketBySalt",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "marketKey",
        type: "address",
      },
    ],
    name: "getMarketInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "marketToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "indexToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "longToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "shortToken",
                type: "address",
              },
            ],
            internalType: "struct Market.Props",
            name: "market",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "borrowingFactorPerSecondForLongs",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowingFactorPerSecondForShorts",
            type: "uint256",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "long",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "short",
                    type: "tuple",
                  },
                ],
                internalType: "struct MarketUtils.PositionType",
                name: "fundingFeeAmountPerSize",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "long",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "short",
                    type: "tuple",
                  },
                ],
                internalType: "struct MarketUtils.PositionType",
                name: "claimableFundingAmountPerSize",
                type: "tuple",
              },
            ],
            internalType: "struct ReaderUtils.BaseFundingValues",
            name: "baseFunding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "longsPayShorts",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "fundingFactorPerSecond",
                type: "uint256",
              },
              {
                internalType: "int256",
                name: "nextSavedFundingFactorPerSecond",
                type: "int256",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "long",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "short",
                    type: "tuple",
                  },
                ],
                internalType: "struct MarketUtils.PositionType",
                name: "fundingFeeAmountPerSizeDelta",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "long",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "short",
                    type: "tuple",
                  },
                ],
                internalType: "struct MarketUtils.PositionType",
                name: "claimableFundingAmountPerSizeDelta",
                type: "tuple",
              },
            ],
            internalType:
              "struct MarketUtils.GetNextFundingAmountPerSizeResult",
            name: "nextFunding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "virtualPoolAmountForLongToken",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "virtualPoolAmountForShortToken",
                type: "uint256",
              },
              {
                internalType: "int256",
                name: "virtualInventoryForPositions",
                type: "int256",
              },
            ],
            internalType: "struct ReaderUtils.VirtualInventory",
            name: "virtualInventory",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isDisabled",
            type: "bool",
          },
        ],
        internalType: "struct ReaderUtils.MarketInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices[]",
        name: "marketPricesList",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getMarketInfoList",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "marketToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "indexToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "longToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "shortToken",
                type: "address",
              },
            ],
            internalType: "struct Market.Props",
            name: "market",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "borrowingFactorPerSecondForLongs",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowingFactorPerSecondForShorts",
            type: "uint256",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "long",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "short",
                    type: "tuple",
                  },
                ],
                internalType: "struct MarketUtils.PositionType",
                name: "fundingFeeAmountPerSize",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "long",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "short",
                    type: "tuple",
                  },
                ],
                internalType: "struct MarketUtils.PositionType",
                name: "claimableFundingAmountPerSize",
                type: "tuple",
              },
            ],
            internalType: "struct ReaderUtils.BaseFundingValues",
            name: "baseFunding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "longsPayShorts",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "fundingFactorPerSecond",
                type: "uint256",
              },
              {
                internalType: "int256",
                name: "nextSavedFundingFactorPerSecond",
                type: "int256",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "long",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "short",
                    type: "tuple",
                  },
                ],
                internalType: "struct MarketUtils.PositionType",
                name: "fundingFeeAmountPerSizeDelta",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "long",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "short",
                    type: "tuple",
                  },
                ],
                internalType: "struct MarketUtils.PositionType",
                name: "claimableFundingAmountPerSizeDelta",
                type: "tuple",
              },
            ],
            internalType:
              "struct MarketUtils.GetNextFundingAmountPerSizeResult",
            name: "nextFunding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "virtualPoolAmountForLongToken",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "virtualPoolAmountForShortToken",
                type: "uint256",
              },
              {
                internalType: "int256",
                name: "virtualInventoryForPositions",
                type: "int256",
              },
            ],
            internalType: "struct ReaderUtils.VirtualInventory",
            name: "virtualInventory",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isDisabled",
            type: "bool",
          },
        ],
        internalType: "struct ReaderUtils.MarketInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "indexTokenPrice",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "longTokenPrice",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "shortTokenPrice",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "pnlFactorType",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "maximize",
        type: "bool",
      },
    ],
    name: "getMarketTokenPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        components: [
          {
            internalType: "int256",
            name: "poolValue",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "longPnl",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "shortPnl",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "netPnl",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "longTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longTokenUsd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortTokenUsd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalBorrowingFees",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowingFeePoolFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "impactPoolAmount",
            type: "uint256",
          },
        ],
        internalType: "struct MarketPoolValueInfo.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getMarkets",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "indexTokenPrice",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "maximize",
        type: "bool",
      },
    ],
    name: "getNetPnl",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "indexTokenPrice",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "maximize",
        type: "bool",
      },
    ],
    name: "getOpenInterestWithPnl",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "getOrder",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "cancellationReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialCollateralToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "swapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Order.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Order.OrderType",
                name: "orderType",
                type: "uint8",
              },
              {
                internalType: "enum Order.DecreasePositionSwapType",
                name: "decreasePositionSwapType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "sizeDeltaUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "initialCollateralDeltaAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "acceptablePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minOutputAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "validFromTime",
                type: "uint256",
              },
            ],
            internalType: "struct Order.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isLong",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isFrozen",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "autoCancel",
                type: "bool",
              },
            ],
            internalType: "struct Order.Flags",
            name: "flags",
            type: "tuple",
          },
        ],
        internalType: "struct Order.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "indexTokenPrice",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "maximize",
        type: "bool",
      },
    ],
    name: "getPnl",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "address",
        name: "marketAddress",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "maximize",
        type: "bool",
      },
    ],
    name: "getPnlToPoolFactor",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "getPosition",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "collateralToken",
                type: "address",
              },
            ],
            internalType: "struct Position.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "sizeInUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sizeInTokens",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "collateralAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "borrowingFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fundingFeeAmountPerSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "longTokenClaimableFundingAmountPerSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shortTokenClaimableFundingAmountPerSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "increasedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "decreasedAtTime",
                type: "uint256",
              },
            ],
            internalType: "struct Position.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isLong",
                type: "bool",
              },
            ],
            internalType: "struct Position.Flags",
            name: "flags",
            type: "tuple",
          },
        ],
        internalType: "struct Position.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "contract IReferralStorage",
        name: "referralStorage",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "positionKey",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "sizeDeltaUsd",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "uiFeeReceiver",
        type: "address",
      },
      {
        internalType: "bool",
        name: "usePositionSizeAsSizeDeltaUsd",
        type: "bool",
      },
    ],
    name: "getPositionInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "account",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "market",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "collateralToken",
                    type: "address",
                  },
                ],
                internalType: "struct Position.Addresses",
                name: "addresses",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "sizeInUsd",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "sizeInTokens",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "collateralAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowingFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "fundingFeeAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "longTokenClaimableFundingAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortTokenClaimableFundingAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "increasedAtTime",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "decreasedAtTime",
                    type: "uint256",
                  },
                ],
                internalType: "struct Position.Numbers",
                name: "numbers",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "isLong",
                    type: "bool",
                  },
                ],
                internalType: "struct Position.Flags",
                name: "flags",
                type: "tuple",
              },
            ],
            internalType: "struct Position.Props",
            name: "position",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32",
                    name: "referralCode",
                    type: "bytes32",
                  },
                  {
                    internalType: "address",
                    name: "affiliate",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "trader",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "totalRebateFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "affiliateRewardFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "adjustedAffiliateRewardFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "traderDiscountFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "totalRebateAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "traderDiscountAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "affiliateRewardAmount",
                    type: "uint256",
                  },
                ],
                internalType:
                  "struct PositionPricingUtils.PositionReferralFees",
                name: "referral",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "traderTier",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "traderDiscountFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "traderDiscountAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct PositionPricingUtils.PositionProFees",
                name: "pro",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "fundingFeeAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "claimableLongTokenAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "claimableShortTokenAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "latestFundingFeeAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "latestLongTokenClaimableFundingAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "latestShortTokenClaimableFundingAmountPerSize",
                    type: "uint256",
                  },
                ],
                internalType: "struct PositionPricingUtils.PositionFundingFees",
                name: "funding",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "borrowingFeeUsd",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowingFeeAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowingFeeReceiverFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowingFeeAmountForFeeReceiver",
                    type: "uint256",
                  },
                ],
                internalType:
                  "struct PositionPricingUtils.PositionBorrowingFees",
                name: "borrowing",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "uiFeeReceiver",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "uiFeeReceiverFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "uiFeeAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct PositionPricingUtils.PositionUiFees",
                name: "ui",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "liquidationFeeUsd",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidationFeeAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidationFeeReceiverFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidationFeeAmountForFeeReceiver",
                    type: "uint256",
                  },
                ],
                internalType:
                  "struct PositionPricingUtils.PositionLiquidationFees",
                name: "liquidation",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "min",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "max",
                    type: "uint256",
                  },
                ],
                internalType: "struct Price.Props",
                name: "collateralTokenPrice",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "positionFeeFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "protocolFeeAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "positionFeeReceiverFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeReceiverAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeAmountForPool",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "positionFeeAmountForPool",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "positionFeeAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalCostAmountExcludingFunding",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalCostAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalDiscountAmount",
                type: "uint256",
              },
            ],
            internalType: "struct PositionPricingUtils.PositionFees",
            name: "fees",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "int256",
                name: "priceImpactUsd",
                type: "int256",
              },
              {
                internalType: "uint256",
                name: "priceImpactDiffUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionPrice",
                type: "uint256",
              },
            ],
            internalType: "struct ReaderPricingUtils.ExecutionPriceResult",
            name: "executionPriceResult",
            type: "tuple",
          },
          {
            internalType: "int256",
            name: "basePnlUsd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "uncappedBasePnlUsd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "pnlAfterPriceImpactUsd",
            type: "int256",
          },
        ],
        internalType: "struct ReaderPositionUtils.PositionInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "contract IReferralStorage",
        name: "referralStorage",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "positionKeys",
        type: "bytes32[]",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices[]",
        name: "prices",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "uiFeeReceiver",
        type: "address",
      },
    ],
    name: "getPositionInfoList",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "account",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "market",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "collateralToken",
                    type: "address",
                  },
                ],
                internalType: "struct Position.Addresses",
                name: "addresses",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "sizeInUsd",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "sizeInTokens",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "collateralAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowingFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "fundingFeeAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "longTokenClaimableFundingAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortTokenClaimableFundingAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "increasedAtTime",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "decreasedAtTime",
                    type: "uint256",
                  },
                ],
                internalType: "struct Position.Numbers",
                name: "numbers",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "isLong",
                    type: "bool",
                  },
                ],
                internalType: "struct Position.Flags",
                name: "flags",
                type: "tuple",
              },
            ],
            internalType: "struct Position.Props",
            name: "position",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32",
                    name: "referralCode",
                    type: "bytes32",
                  },
                  {
                    internalType: "address",
                    name: "affiliate",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "trader",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "totalRebateFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "affiliateRewardFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "adjustedAffiliateRewardFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "traderDiscountFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "totalRebateAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "traderDiscountAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "affiliateRewardAmount",
                    type: "uint256",
                  },
                ],
                internalType:
                  "struct PositionPricingUtils.PositionReferralFees",
                name: "referral",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "traderTier",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "traderDiscountFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "traderDiscountAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct PositionPricingUtils.PositionProFees",
                name: "pro",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "fundingFeeAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "claimableLongTokenAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "claimableShortTokenAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "latestFundingFeeAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "latestLongTokenClaimableFundingAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "latestShortTokenClaimableFundingAmountPerSize",
                    type: "uint256",
                  },
                ],
                internalType: "struct PositionPricingUtils.PositionFundingFees",
                name: "funding",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "borrowingFeeUsd",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowingFeeAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowingFeeReceiverFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowingFeeAmountForFeeReceiver",
                    type: "uint256",
                  },
                ],
                internalType:
                  "struct PositionPricingUtils.PositionBorrowingFees",
                name: "borrowing",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "uiFeeReceiver",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "uiFeeReceiverFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "uiFeeAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct PositionPricingUtils.PositionUiFees",
                name: "ui",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "liquidationFeeUsd",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidationFeeAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidationFeeReceiverFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidationFeeAmountForFeeReceiver",
                    type: "uint256",
                  },
                ],
                internalType:
                  "struct PositionPricingUtils.PositionLiquidationFees",
                name: "liquidation",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "min",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "max",
                    type: "uint256",
                  },
                ],
                internalType: "struct Price.Props",
                name: "collateralTokenPrice",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "positionFeeFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "protocolFeeAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "positionFeeReceiverFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeReceiverAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeAmountForPool",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "positionFeeAmountForPool",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "positionFeeAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalCostAmountExcludingFunding",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalCostAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalDiscountAmount",
                type: "uint256",
              },
            ],
            internalType: "struct PositionPricingUtils.PositionFees",
            name: "fees",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "int256",
                name: "priceImpactUsd",
                type: "int256",
              },
              {
                internalType: "uint256",
                name: "priceImpactDiffUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionPrice",
                type: "uint256",
              },
            ],
            internalType: "struct ReaderPricingUtils.ExecutionPriceResult",
            name: "executionPriceResult",
            type: "tuple",
          },
          {
            internalType: "int256",
            name: "basePnlUsd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "uncappedBasePnlUsd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "pnlAfterPriceImpactUsd",
            type: "int256",
          },
        ],
        internalType: "struct ReaderPositionUtils.PositionInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "positionKey",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "sizeDeltaUsd",
        type: "uint256",
      },
    ],
    name: "getPositionPnlUsd",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "getShift",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "fromMarket",
                type: "address",
              },
              {
                internalType: "address",
                name: "toMarket",
                type: "address",
              },
            ],
            internalType: "struct Shift.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "marketTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minMarketTokens",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
            ],
            internalType: "struct Shift.Numbers",
            name: "numbers",
            type: "tuple",
          },
        ],
        internalType: "struct Shift.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "uiFeeReceiver",
        type: "address",
      },
    ],
    name: "getSwapAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "feeReceiverAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeAmountForPool",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountAfterFees",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "uiFeeReceiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "uiFeeReceiverFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "uiFeeAmount",
            type: "uint256",
          },
        ],
        internalType: "struct SwapPricingUtils.SwapFees",
        name: "fees",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "address",
        name: "marketKey",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "tokenInPrice",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "tokenOutPrice",
        type: "tuple",
      },
    ],
    name: "getSwapPriceImpact",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "getWithdrawal",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "longTokenSwapPath",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "shortTokenSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Withdrawal.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "marketTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minLongTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minShortTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
            ],
            internalType: "struct Withdrawal.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
            ],
            internalType: "struct Withdrawal.Flags",
            name: "flags",
            type: "tuple",
          },
        ],
        internalType: "struct Withdrawal.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "marketTokenAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "uiFeeReceiver",
        type: "address",
      },
      {
        internalType: "enum ISwapPricingUtils.SwapPricingType",
        name: "swapPricingType",
        type: "uint8",
      },
    ],
    name: "getWithdrawalAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "contract IReferralStorage",
        name: "referralStorage",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "positionKey",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "shouldValidateMinCollateralUsd",
        type: "bool",
      },
    ],
    name: "isPositionLiquidatable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        components: [
          {
            internalType: "int256",
            name: "remainingCollateralUsd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "minCollateralUsd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "minCollateralUsdForLeverage",
            type: "int256",
          },
        ],
        internalType: "struct PositionUtils.IsPositionLiquidatableInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506153e4806100206000396000f3fe608060405234801561001057600080fd5b50600436106101535760003560e01c8062e261b7146101585780630815bce114610183578063095ce6c5146101a35780630fa8f5161461024c5780631485d2971461026c57806324c029e01461028c5780632572d8f9146102ad5780632b17b4fd146102d5578063409f37c71461030857806342a6f8d31461037a57806349651b6a1461039a5780635d2b44f9146103ba5780635d5c6efe146103da5780635deceb8414610408578063714af34b1461041b57806377cfb1621461043b578063847bb4691461045b578063971de27d1461047b578063a01409381461048e578063a4f0d550146104a1578063addac2e0146104b4578063b05e0ea014610553578063b4976dae14610573578063bc7b5bba14610586578063bfbf451a146105a6578063ce3264bf146105b9578063ceeea3bf146105d9578063fd50649d146105f9575b600080fd5b61016b6101663660046125e7565b61060c565b60405161017a93929190612684565b60405180910390f35b6101966101913660046126de565b6106cc565b60405161017a9190612a16565b6101b66101b1366004612a25565b610765565b60405161017a92919060006101808201905083825282516020830152602083015160408301526040830151606083015260608301516080830152608083015160a083015260a083015160c083015260c083015160e083015260e083015161010081818501528085015191505061012081818501528085015191505061014081818501528085015161016085015250509392505050565b61025f61025a366004612aa2565b610859565b60405161017a9190612ace565b61027f61027a366004612aa2565b6108e5565b60405161017a9190612b21565b61029f61029a366004612c61565b61096b565b60405190815260200161017a565b6102c06102bb366004612cdf565b610986565b6040805192835260208301919091520161017a565b6102e86102e3366004612d4c565b610a19565b60408051948552921515602085015291830152606082015260800161017a565b61031b610316366004612da8565b610aaf565b604080519384526020808501939093528151848201529181015160608085019190915291810151608080850191909152918101516001600160a01b031660a0808501919091529181015160c0840152015160e08201526101000161017a565b61038d610388366004612e15565b610b77565b60405161017a9190613022565b6103ad6103a8366004612aa2565b610bfc565b60405161017a9190613084565b6103cd6103c8366004613097565b610c81565b60405161017a9190613102565b6103ed6103e8366004613110565b610d9a565b6040805193845260208401929092529082015260600161017a565b61029f61041636600461319a565b610eb5565b61042e610429366004613234565b610f3e565b60405161017a91906132a0565b61044e610449366004612e15565b610fc0565b60405161017a91906132ae565b61046e6104693660046132fd565b611045565b60405161017a919061341f565b61029f61048936600461342e565b6110d4565b61029f61049c366004612c61565b61116b565b61042e6104af366004612aa2565b61117a565b6104c76104c2366004612aa2565b6111bb565b60408051825180516001600160a01b0390811683526020808301518216818501528285015182168486015260608084015183168186015260808085015184168187015260a0948501519093169385019390935294850151805160c08501529485015160e0840152928401516101008301528301516101208201529101516101408201526101600161017a565b61056661056136600461352b565b61123e565b60405161017a919061364a565b6103ed61058136600461368d565b6112cb565b6105996105943660046136e9565b6113e1565b60405161017a9190613748565b6105666105b436600461378b565b611466565b6105cc6105c736600461387b565b6114ed565b60405161017a91906138b0565b6105ec6105e7366004612aa2565b61157e565b60405161017a91906138f2565b61029f610607366004613993565b611604565b6000606061063460405180606001604052806000815260200160008152602001600081525090565b6040516317e6114d60e11b815273a7Bb93C5361BD6fe66408dCc0a9d98a25a1b2d8890632fcc229a90610675908c908c908c908c908c908c90600401613a1e565b600060405180830381865af4158015610692573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106ba9190810190613ab1565b92509250925096509650969350505050565b6106d4611dc5565b6040516306bc109960e31b815273a7Bb93C5361BD6fe66408dCc0a9d98a25a1b2d88906335e084c890610717908b908b908b908b908b908b908b90600401613b6a565b6106a060405180830381865af4158015610735573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107599190614005565b98975050505050505050565b60006107c460405180610160016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051637d494dc360e01b815273B6426e70E7efc43aEf14a1D963A4F740c235646790637d494dc390610807908c908c908c908c908c908c908c90600401614022565b61018060405180830381865af4158015610825573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108499190614084565b9150915097509795505050505050565b610861611e0d565b60405163fdfc26f360e01b8152733a4F71855554552f024E936E673eDb6E5C25535C9063fdfc26f39061089a9086908690600401614138565b6101e060405180830381865af41580156108b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108dc9190614151565b90505b92915050565b6108ed611eb1565b60405163fdfc26f360e01b8152735E4A532E53359b0BeAa21e41ccC9B35042e8051C9063fdfc26f3906109269086908690600401614138565b600060405180830381865af4158015610943573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108dc919081019061423f565b600061097a8686868686611612565b90505b95945050505050565b60008073a0452ae9b77d384b45816A086Bd474104fAD32a463b027d32d8989898989896040518763ffffffff1660e01b81526004016109ca9695949392919061439e565b6040805180830381865af41580156109e6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0a91906143f6565b91509150965096945050505050565b600080600080730597FB70fF1b3081c9B27a9eFFD1407DF1B4035f631d81085c898989896040518563ffffffff1660e01b8152600401610a5c949392919061441a565b608060405180830381865af4158015610a79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9d9190614448565b929b919a509850909650945050505050565b600080610af46040518060c0016040528060008152602001600081526020016000815260200160006001600160a01b0316815260200160008152602001600081525090565b60405163dafa66bf60e01b8152734eA13E6926bF984B4c8853A8fbc9AbC149A0b4459063dafa66bf90610b35908c908c908c908c908c908c90600401614486565b61010060405180830381865af4158015610b53573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ba91906144d8565b604051635b4df72360e11b8152606090730597FB70fF1b3081c9B27a9eFFD1407DF1B4035f9063b69bee4690610bb7908890889088908890600401614560565b600060405180830381865af4158015610bd4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261097d91908101906147ab565b610c04611f4a565b6040516218cbb560eb1b8152730597FB70fF1b3081c9B27a9eFFD1407DF1B4035f9063c65da80090610c3c9086908690600401614138565b600060405180830381865af4158015610c59573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108dc919081019061485b565b610c89611fcb565b60405163a8d8fff560e01b815260009073DEBC0b5DADF3F88d9f00B0d8545B61e67eF3aBEa9063a8d8fff590610cc5908c908c9060040161488f565b608060405180830381865af4158015610ce2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d069190614906565b604051630a37d4c760e11b8152909150734eA13E6926bF984B4c8853A8fbc9AbC149A0b4459063146fa98e90610d4c908c9085908c908c908c908c908c90600401614922565b606060405180830381865af4158015610d69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8d9190614976565b9998505050505050505050565b60008060008073DEBC0b5DADF3F88d9f00B0d8545B61e67eF3aBEa63a8d8fff58c8c6040518363ffffffff1660e01b8152600401610dd992919061488f565b608060405180830381865af4158015610df6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1a9190614906565b6040516340f5d44f60e11b8152909150734eA13E6926bF984B4c8853A8fbc9AbC149A0b445906381eba89e90610e60908e9085908e908e908e908e908e90600401614992565b606060405180830381865af4158015610e7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea191906149e4565b935093509350509750975097945050505050565b604051632bf0549960e11b8152600090736023f1452C85aA2f5C77f6814651d3ED2FD19654906357e0a93290610efd908c908c908c908c908c908c908c908c90600401614a12565b602060405180830381865af4158015610f1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8d9190614a7d565b610f46611fec565b60405163a8d8fff560e01b815273DEBC0b5DADF3F88d9f00B0d8545B61e67eF3aBEa9063a8d8fff590610f7f908690869060040161488f565b608060405180830381865af4158015610f9c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108dc9190614906565b60405163282ece5960e11b815260609073a7Bb93C5361BD6fe66408dCc0a9d98a25a1b2d889063505d9cb290611000908890889088908890600401614560565b600060405180830381865af415801561101d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261097d9190810190614a96565b61104d612013565b60405163619c4ddb60e01b8152730597FB70fF1b3081c9B27a9eFFD1407DF1B4035f9063619c4ddb9061108890879087908790600401614b30565b6103a060405180830381865af41580156110a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ca9190614cca565b90505b9392505050565b60008073DEBC0b5DADF3F88d9f00B0d8545B61e67eF3aBEa63a8d8fff588886040518363ffffffff1660e01b815260040161111092919061488f565b608060405180830381865af415801561112d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111519190614906565b905061116087828787876116a3565b979650505050505050565b600061097a86868686866116e7565b611182611fec565b6040516329bc01e160e11b815273DEBC0b5DADF3F88d9f00B0d8545B61e67eF3aBEa9063537803c290610f7f9086908690600401614138565b6111c3612084565b60405163fdfc26f360e01b815273b30a8d551Bd51fC1493DA195289665cBcDB6EB989063fdfc26f3906111fc9086908690600401614138565b61016060405180830381865af415801561121a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108dc9190614d35565b604051637810908160e01b815260609073a7Bb93C5361BD6fe66408dCc0a9d98a25a1b2d8890637810908190611286908c908c908c908c908c908c908c908c90600401614e2c565b600060405180830381865af41580156112a3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d8d9190810190614ec9565b600080600080733a4F71855554552f024E936E673eDb6E5C25535C63fdfc26f38a886040518363ffffffff1660e01b815260040161130a929190614138565b6101e060405180830381865af4158015611328573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134c9190614151565b60405163e22de79360e01b815290915073A3D091e23FEc66D843D3Fc8a83F1C8996d32f6a49063e22de7939061138e908c908c908c9087908c90600401614f57565b606060405180830381865af41580156113ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113cf91906149e4565b93509350935050955095509592505050565b6040516340c774bb60e11b8152606090730597FB70fF1b3081c9B27a9eFFD1407DF1B4035f9063818ee97690611421908890889088908890600401614fc1565b600060405180830381865af415801561143e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261097d9190810190614ff8565b604051636aeb875560e01b815260609073a7Bb93C5361BD6fe66408dCc0a9d98a25a1b2d8890636aeb8755906114a89089908990899089908990600401615086565b600060405180830381865af41580156114c5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261097a9190810190614ec9565b6040516326d0fa7f60e21b81526001600160a01b03841660048201526024810183905260448101829052606090730597FB70fF1b3081c9B27a9eFFD1407DF1B4035f90639b43e9fc90606401600060405180830381865af4158015611556573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110ca9190810190615104565b6115866120f5565b60405163fdfc26f360e01b815273B57Cb5eafCd367D0C4D7ecd04d170e48A61451389063fdfc26f3906115bf9086908690600401614138565b600060405180830381865af41580156115dc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108dc9190810190615194565b600061097d85858585611712565b600080611628611623888887611741565b611794565b90506000611637888887611807565b9050811580611644575080155b156116545760009250505061097d565b600061166187878761184e565b9050600061167261162383856152e1565b905060008761168a5761168582866152f8565b611694565b61169485836152f8565b9b9a5050505050505050505050565b6000806116b4878787878715611887565b9050806000036116c857600091505061097d565b60006116db888888600001518888611612565b90506107598183611900565b6000806116f5878786611741565b905060006117068888888888611612565b90506107598282611947565b600080611723868686600187611612565b90506000611735878787600088611612565b9050611160818361531f565b6000806117568460400151856060015161195d565b9050600061176f8686600001518760400151878661198c565b905060006117888787600001518860600151888761198c565b90506111608183615347565b60006001600160ff1b038211156118035760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b60648201526084015b60405180910390fd5b5090565b60008061181c8460400151856060015161195d565b9050600061183586866000015187604001518786611a12565b9050600061178887876000015188606001518887611a12565b6000821561186f5781611862578351611868565b83602001515b90506110cd565b8161187e5783602001516110ca565b50509051919050565b6000808361189957856060015161189f565b85604001515b905060006118ae888884611a2f565b9050600084156118dc57856118cb578660400151602001516118d5565b8660200151602001515b90506118f6565b856118ec576040870151516118f3565b6020870151515b90505b610d8d81836152e1565b60008061191561190f85611acd565b84611ade565b9050600084136119365761192881611794565b6119319061535a565b61193f565b61193f81611794565b949350505050565b60008161195384611794565b6108dc919061531f565b6000816001600160a01b0316836001600160a01b03161461197f576001611982565b60025b60ff169392505050565b600081866001600160a01b031663bd02d0f56119a9888888611aec565b6040518263ffffffff1660e01b81526004016119c791815260200190565b602060405180830381865afa1580156119e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a089190614a7d565b61097a919061538c565b600081866001600160a01b031663bd02d0f56119a9888888611b7e565b600080611a448460400151856060015161195d565b905080856001600160a01b031663bd02d0f5611a64876000015187611bbb565b6040518263ffffffff1660e01b8152600401611a8291815260200190565b602060405180830381865afa158015611a9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ac39190614a7d565b61097d919061538c565b600080821215611803575060000390565b60006108dc83836000611c42565b6000604051602001611b1f906020808252600d908201526c13d4115397d2539511549154d5609a1b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b038087169183019190915284166060820152821515608082015260a0016040516020818303038152906040528051906020012090509392505050565b6000604051602001611b1f906020808252601790820152764f50454e5f494e5445524553545f494e5f544f4b454e5360481b604082015260600190565b6000604051602001611bec906020808252600b908201526a1413d3d317d05353d5539560aa1b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b03808616918301919091528316606082015260800160405160208183030381529060405280519060200120905092915050565b600083600003611c54575060006110cd565b8115611c73576118688468327cb2734119d3b7a9601e1b856001611c8a565b6110ca8468327cb2734119d3b7a9601e1b85611cdb565b600080611c98868686611cdb565b90506001836002811115611cae57611cae612e5b565b148015611ccb575060008480611cc657611cc6615376565b868809115b1561097d5761097a600182615347565b6000808060001985870985870292508281108382030391505080600003611d1557838281611d0b57611d0b615376565b04925050506110cd565b808411611d5c5760405162461bcd60e51b81526020600482015260156024820152744d6174683a206d756c446976206f766572666c6f7760581b60448201526064016117fa565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6040518060c00160405280611dd8611e0d565b8152602001611de561213d565b8152602001611df2611fcb565b81526020016000815260200160008152602001600081525090565b6040805160c081019091526000606082018181526080830182905260a083019190915281908152602001611e9460405180610160016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526040805160208181019092526000815291015290565b905290565b604080516101808101909152600060608083018281526080840183905260a0840183905260c0840183905260e084018390526101008401839052610120840192909252610140830181905261016083015281905b8152602001611e946040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604080516101608101909152600060608083018281526080840183905260a0840183905260c0840183905260e084018390526101008401839052610120840192909252610140830152815260208101611fa1612283565b81526040805160808101825260008082526020828101829052928201819052606082015291015290565b60405180606001604052806000815260200160008152602001600081525090565b60408051608081018252600080825260208201819052918101829052606081019190915290565b6040518060e00160405280612026611fec565b8152602001600081526020016000815260200161204161229e565b815260200161204e6122be565b815260200161207760405180606001604052806000815260200160008152602001600081525090565b8152600060209091015290565b60408051610100810182526000918101828152606082018390526080820183905260a0820183905260c0820183905260e08201929092529081908152602001611eac6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b604080516101408101909152600060608083018281526080840183905260a0840183905260c0840183905260e084019290925261010083018190526101208301528190611f05565b604080516102c0810190915260006101c082018181526101e08301829052610200830182905261022083018290526102408301829052610260830182905261028083018290526102a0830191909152819081526020016121cc6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526020016121fc6040518060800160405280600081526020016000815260200160008152602001600081525090565b8152604080516060810182526000808252602082810182905292820152910190815260200161223e604051806040016040528060008152602001600081525090565b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040805161016081019091528060008152602001600061223e565b60405180604001604052806122b16122e4565b8152602001611eac6122e4565b6040518060a0016040528060001515815260200160008152602001600081526020016122b15b60408051608081018252600091810182815260608201929092529081908152602001611eac604051806040016040528060008152602001600081525090565b6001600160a01b038116811461233857600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b03811182821017156123735761237361233b565b60405290565b604080519081016001600160401b03811182821017156123735761237361233b565b604051606081016001600160401b03811182821017156123735761237361233b565b60405161016081016001600160401b03811182821017156123735761237361233b565b60405161010081016001600160401b03811182821017156123735761237361233b565b60405160c081016001600160401b03811182821017156123735761237361233b565b6040516101c081016001600160401b03811182821017156123735761237361233b565b60405160e081016001600160401b03811182821017156123735761237361233b565b60405161012081016001600160401b03811182821017156123735761237361233b565b60405160a081016001600160401b03811182821017156123735761237361233b565b604051601f8201601f191681016001600160401b03811182821017156124d7576124d761233b565b604052919050565b80356124ea81612323565b919050565b60006080828403121561250157600080fd5b612509612351565b9050813561251681612323565b8152602082013561252681612323565b6020820152604082013561253981612323565b6040820152606082013561254c81612323565b606082015292915050565b60006040828403121561256957600080fd5b612571612379565b9050813581526020820135602082015292915050565b600060c0828403121561259957600080fd5b6125a161239b565b90506125ad8383612557565b81526125bc8360408401612557565b60208201526125ce8360808401612557565b604082015292915050565b801515811461233857600080fd5b6000806000806000806101c0878903121561260157600080fd5b863561260c81612323565b9550602087013561261c81612323565b94506040870135935061263288606089016124ef565b92506126418860e08901612587565b91506101a0870135612652816125d9565b809150509295509295509295565b60005b8381101561267b578181015183820152602001612663565b50506000910152565b831515815260a06020820152600083518060a08401526126ab8160c0850160208801612660565b60c0601f19601f830116840101915050825160408301526020830151606083015260408301516080830152949350505050565b6000806000806000806000610180888a0312156126fa57600080fd5b873561270581612323565b9650602088013561271581612323565b95506040880135945061272b8960608a01612587565b9350610120880135925061014088013561274481612323565b9150610160880135612755816125d9565b8091505092959891949750929550565b6001600160a01b03169052565b80516001600160a01b03908116835260208083015182169084015260409182015116910152565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015181840152506101408082015181840152505050565b612816828251612772565b60208101516128286060840182612799565b50604001515115156101c09190910152565b80518252602090810151910152565b8051825260208082015190830152604090810151910152565b61286d82825161280b565b602081810151805180516101e0860152808301516001600160a01b0390811661020087015260408083015182166102208801526060808401516102408901526080808501516102608a015260a0808601516102808b015260c08601516102a08b015260e0909501516102c08a01528587015180516102e08b0152808801516103008b0152808401516103208b0152808301516103408b0152808201516103608b0152909401516103808901528185015180516103a08a0152808701516103c08a0152808301516103e08a0152810151610400890152840151805190921661042088015293810151610440870152909201516104608501529081015161297661048085018261283a565b5060a08101516104c084015260c08101516104e084015260e08101516105008401526101008101516105208401526101208101516105408401526101408101516105608401526101608101516105808401526101808101516105a08401526101a001516105c083015260408101516129f26105e0840182612849565b506060810151610640830152608081015161066083015260a0015161068090910152565b6106a081016108df8284612862565b60008060008060008060006101a0888a031215612a4157600080fd5b8735612a4c81612323565b9650612a5b8960208a016124ef565b9550612a6a8960a08a01612557565b9450612a798960e08a01612557565b9350612a89896101208a01612557565b92506101608801359150610180880135612755816125d9565b60008060408385031215612ab557600080fd5b8235612ac081612323565b946020939093013593505050565b6101e081016108df828461280b565b600081518084526020808501945080840160005b83811015612b165781516001600160a01b031687529582019590820190600101612af1565b509495945050505050565b6020815260008251610120806020850152612b4161014085018351612765565b6020820151612b54610160860182612765565b506040820151612b68610180860182612765565b506060820151612b7c6101a0860182612765565b506080820151612b906101c0860182612765565b5060a0820151612ba46101e0860182612765565b5060c0820151612bb8610200860182612765565b5060e082015181610220860152612bd3610260860182612add565b9050610100830151925061013f1985820301610240860152612bf58184612add565b9250506020850151612c496040860182805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c08301525050565b50604085015180511515858301525090949350505050565b60008060008060006101208688031215612c7a57600080fd5b8535612c8581612323565b9450612c9487602088016124ef565b9350612ca38760a08801612557565b925060e0860135612cb3816125d9565b9150610100860135612cc4816125d9565b809150509295509295909350565b6003811061233857600080fd5b6000806000806000806101c08789031215612cf957600080fd5b8635612d0481612323565b9550612d1388602089016124ef565b9450612d228860a08901612587565b93506101608701359250610180870135612d3b81612323565b91506101a087013561265281612cd2565b6000806000806101208587031215612d6357600080fd5b8435612d6e81612323565b93506020850135612d7e81612323565b92506040850135612d8e816125d9565b9150612d9d8660608701612587565b905092959194509250565b6000806000806000806101c08789031215612dc257600080fd5b8635612dcd81612323565b9550612ddc88602089016124ef565b9450612deb8860a08901612587565b9350610160870135612dfc81612323565b925061018087013591506101a087013561265281612323565b60008060008060808587031215612e2b57600080fd5b8435612e3681612323565b93506020850135612e4681612323565b93969395505050506040820135916060013590565b634e487b7160e01b600052602160045260246000fd5b60088110612e8157612e81612e5b565b9052565b6003811061233857612338612e5b565b612e8181612e85565b612ea9828251612e71565b6020810151612ebb6020840182612e95565b5060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015181840152506101408082015181840152505050565b805161020080845281516001600160a01b03908116918501919091526020820151166102208401526040810151600091612f5e610240860183612765565b60608101519150612f73610260860183612765565b60808101519150612f88610280860183612765565b60a08101519150612f9d6102a0860183612765565b60c08101519150612fb26102c0860183612765565b60e001516101006102e08601529050612fcf610300850182612add565b90506020830151612fe36020860182612e9e565b5060408381015180511515610180870152602081015115156101a08701529081015115156101c0860152606081015115156101e0860152509392505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561307757603f19888603018452613065858351612f20565b94509285019290850190600101613049565b5092979650505050505050565b6020815260006108dc6020830184612f20565b6000806000806000806000610100888a0312156130b357600080fd5b87356130be81612323565b965060208801356130ce81612323565b95506130dd8960408a01612557565b94506080880135935060a0880135925060c0880135915060e0880135612755816125d9565b606081016108df8284612849565b6000806000806000806000610120888a03121561312c57600080fd5b873561313781612323565b9650602088013561314781612323565b9550604088013561315781612323565b9450606088013561316781612323565b93506080880135925061317d8960a08a01612557565b915061318c8960e08a01612557565b905092959891949750929550565b600080600080600080600080610200898b0312156131b757600080fd5b88356131c281612323565b97506131d18a60208b016124ef565b96506131e08a60a08b01612587565b9550610160890135945061018089013593506101a089013561320181612323565b92506101c089013561321281612cd2565b91506101e0890135613223816125d9565b809150509295985092959890939650565b6000806040838503121561324757600080fd5b823561325281612323565b9150602083013561326281612323565b809150509250929050565b80516001600160a01b03908116835260208083015182169084015260408083015182169084015260609182015116910152565b608081016108df828461326d565b6020808252825182820181905260009190848201906040850190845b818110156132f1576132dd83855161280b565b928401926101e092909201916001016132ca565b50909695505050505050565b6000806000610100848603121561331357600080fd5b833561331e81612323565b925061332d8560208601612587565b915060e084013561333d81612323565b809150509250925092565b61335382825161283a565b6020810151613365604084018261283a565b505050565b61337582825161326d565b60208101516080830152604081015160a0830152606081015161339c60c084018251613348565b602001516133ae610140840182613348565b506080810151805115156101c084015260208101516101e0840152604081015161020084015260608101516133e7610220850182613348565b50608001516133fa6102a0840182613348565b5060a081015161340e610320840182612849565b5060c0015115156103809190910152565b6103a081016108df828461336a565b6000806000806000610140868803121561344757600080fd5b853561345281612323565b9450602086013561346281612323565b93506134718760408801612587565b9250610100860135613482816125d9565b9150610120860135612cc4816125d9565b60006001600160401b038211156134ac576134ac61233b565b5060051b60200190565b600082601f8301126134c757600080fd5b813560206134dc6134d783613493565b6124af565b82815260c092830285018201928282019190878511156134fb57600080fd5b8387015b8581101561351e576135118982612587565b84529284019281016134ff565b5090979650505050505050565b600080600080600080600080610100898b03121561354857600080fd5b883561355381612323565b975060208981013561356481612323565b975060408a013561357481612323565b965060608a01356001600160401b038082111561359057600080fd5b818c0191508c601f8301126135a457600080fd5b81356135b26134d782613493565b81815260059190911b8301840190848101908f8311156135d157600080fd5b938501935b828510156135f85784356135e981612323565b825293850193908501906135d6565b9950505060808c013592508083111561361057600080fd5b505061361e8b828c016134b6565b94505061362d60a08a016124df565b925060c0890135915060e089013590509295985092959890939650565b6020808252825182820181905260009190848201906040850190845b818110156132f157613679838551612862565b928401926106a09290920191600101613666565b60008060008060006101a086880312156136a657600080fd5b85356136b181612323565b94506136c087602088016124ef565b93506136cf8760a08801612587565b949793965093946101608101359450610180013592915050565b600080600080608085870312156136ff57600080fd5b843561370a81612323565b935060208501356001600160401b0381111561372557600080fd5b613731878288016134b6565b949794965050505060408301359260600135919050565b6020808252825182820181905260009190848201906040850190845b818110156132f15761377783855161336a565b928401926103a09290920191600101613764565b600080600080600060a086880312156137a357600080fd5b85356137ae81612323565b94506020868101356137bf81612323565b945060408701356001600160401b03808211156137db57600080fd5b818901915089601f8301126137ef57600080fd5b81356137fd6134d782613493565b81815260059190911b8301840190848101908c83111561381c57600080fd5b938501935b8285101561383a57843582529385019390850190613821565b97505050606089013592508083111561385257600080fd5b5050613860888289016134b6565b92505061386f608087016124df565b90509295509295909350565b60008060006060848603121561389057600080fd5b833561389b81612323565b95602085013595506040909401359392505050565b6020808252825182820181905260009190848201906040850190845b818110156132f1576138df83855161326d565b92840192608092909201916001016138cc565b602081526000825161012080602085015260018060a01b038083511661014086015280602084015116610160860152806040840151166101808601525060608201516139426101a0860182612765565b5060808201516139566101c0860182612765565b5060a082015160e06101e0860152613972610220860182612add565b905060c0830151925061013f1985820301610200860152612bf58184612add565b60008060008061010085870312156139aa57600080fd5b84356139b581612323565b93506139c486602087016124ef565b92506139d38660a08701612557565b915060e08501356139e3816125d9565b939692955090935050565b6139f982825161283a565b6020810151613a0b604084018261283a565b506040810151613365608084018261283a565b6001600160a01b03878116825286166020820152604081018590526101c08101613a4b606083018661326d565b613a5860e08301856139ee565b8215156101a0830152979650505050505050565b80516124ea816125d9565b600060608284031215613a8957600080fd5b613a9161239b565b905081518152602082015160208201526040820151604082015292915050565b600080600060a08486031215613ac657600080fd5b8351613ad1816125d9565b60208501519093506001600160401b0380821115613aee57600080fd5b818601915086601f830112613b0257600080fd5b815181811115613b1457613b1461233b565b613b27601f8201601f19166020016124af565b9150808252876020828501011115613b3e57600080fd5b613b4f816020840160208601612660565b509250613b6190508560408601613a77565b90509250925092565b6001600160a01b038881168252878116602083015260408201879052610180820190613b9960608401886139ee565b856101208401528085166101408401525082151561016083015298975050505050505050565b80516124ea81612323565b600060208284031215613bdc57600080fd5b604051602081016001600160401b0381118282101715613bfe57613bfe61233b565b80604052508091508251613c11816125d9565b905292915050565b60008183036101e0811215613c2d57600080fd5b613c3561239b565b91506060811215613c4557600080fd5b613c4d61239b565b8351613c5881612323565b81526020840151613c6881612323565b60208201526040840151613c7b81612323565b60408201528252610160605f198201811315613c9657600080fd5b613c9e6123bd565b9150606084015182526080840151602083015260a0840151604083015260c0840151606083015260e084015160808301526101008085015160a08401526101208086015160c08501526101408087015160e08601528387015183860152610180870151828601526101a08701518186015250505050806020830152506125ce836101c08401613bca565b60006101008284031215613d3b57600080fd5b613d436123e0565b9050815181526020820151613d5781612323565b60208201526040820151613d6a81612323565b80604083015250606082015160608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e082015292915050565b600060c08284031215613dbb57600080fd5b613dc3612403565b9050815181526020820151602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015292915050565b600060808284031215613e1357600080fd5b613e1b612351565b90508151815260208201516020820152604082015160408201526060820151606082015292915050565b600060608284031215613e5757600080fd5b613e5f61239b565b90508151613e6c81612323565b80825250602082015160208201526040820151604082015292915050565b600060408284031215613e9c57600080fd5b613ea4612379565b9050815181526020820151602082015292915050565b60008183036106a0811215613ece57600080fd5b613ed6612403565b9150613ee28484613c19565b82526104006101df1982011215613ef857600080fd5b50613f01612425565b613f0f846101e08501613d28565b8152613f1f846102e08501613da9565b6020820152613f32846103a08501613e01565b6040820152613f45846104208501613e45565b6060820152613f58846104808501613e8a565b60808201526104c083015160a08201526104e083015160c082015261050083015160e08201526105208301516101008201526105408301516101208201526105608301516101408201526105808301516101608201526105a08301516101808201526105c08301516101a08201526020820152613fd9836105e08401613a77565b60408201526106408201516060820152610660820151608082015261068082015160a082015292915050565b60006106a0828403121561401857600080fd5b6108dc8383613eba565b6001600160a01b03881681526101a08101614040602083018961326d565b61404d60a083018861283a565b61405a60e083018761283a565b61406861012083018661283a565b8361016083015282151561018083015298975050505050505050565b60008082840361018081121561409957600080fd5b8351925061016080601f19830112156140b157600080fd5b6140b96123bd565b91506020850151825260408501516020830152606085015160408301526080850151606083015260a0850151608083015260c085015160a083015260e085015160c08301526101008086015160e08401526101208087015182850152610140915081870151818501525081860151818401525050809150509250929050565b6001600160a01b03929092168252602082015260400190565b60006101e0828403121561416457600080fd5b6108dc8383613c19565b600082601f83011261417f57600080fd5b8151602061418f6134d783613493565b82815260059290921b840181019181810190868411156141ae57600080fd5b8286015b848110156141d25780516141c581612323565b83529183019183016141b2565b509695505050505050565b600060e082840312156141ef57600080fd5b6141f7612448565b9050815181526020820151602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015260c082015160c082015292915050565b60006020828403121561425157600080fd5b81516001600160401b038082111561426857600080fd5b818401915061012080838703121561427f57600080fd5b61428761239b565b83518381111561429657600080fd5b84018088038313156142a757600080fd5b6142af61246a565b92506142ba81613bbf565b83526142c860208201613bbf565b60208401526142d960408201613bbf565b60408401526142ea60608201613bbf565b60608401526142fb60808201613bbf565b608084015261430c60a08201613bbf565b60a084015261431d60c08201613bbf565b60c084015260e08101518481111561433457600080fd5b6143408982840161416e565b60e085015250610100808201518581111561435a57600080fd5b6143668a82850161416e565b828601525083835261437b89602088016141dd565b602084015261438c89828801613bca565b60408401525090979650505050505050565b6001600160a01b0387811682526101c08201906143be602084018961326d565b6143cb60a08401886139ee565b610160830186905284166101808301526143e483612e85565b826101a0830152979650505050505050565b6000806040838503121561440957600080fd5b505080516020909101519092909150565b6001600160a01b038581168252841660208201528215156040820152610120810161097d60608301846139ee565b6000806000806080858703121561445e57600080fd5b845193506020850151614470816125d9565b6040860151606090960151949790965092505050565b6001600160a01b0387811682526101c08201906144a6602084018961326d565b6144b360a08401886139ee565b808616610160840152846101808401528084166101a084015250979650505050505050565b60008060008385036101008112156144ef57600080fd5b845193506020850151925060c0603f198201121561450c57600080fd5b50614515612403565b60408501518152606085015160208201526080850151604082015260a085015161453e81612323565b606082015260c0850151608082015260e09094015160a0850152509093909250565b6001600160a01b0394851681529290931660208301526040820152606081019190915260800190565b8051600881106124ea57600080fd5b80516124ea81612cd2565b600061016082840312156145b657600080fd5b6145be6123bd565b90506145c982614589565b81526145d760208301614598565b602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e082015261010080830151818301525061012080830151818301525061014080830151818301525092915050565b60006080828403121561465457600080fd5b61465c612351565b90508151614669816125d9565b81526020820151614679816125d9565b6020820152604082015161468c816125d9565b6040820152606082015161254c816125d9565b600061020082840312156146b257600080fd5b6146ba61239b565b82519091506001600160401b03808211156146d457600080fd5b9083019061010082860312156146e957600080fd5b6146f16123e0565b6146fa83613bbf565b815261470860208401613bbf565b602082015261471960408401613bbf565b604082015261472a60608401613bbf565b606082015261473b60808401613bbf565b608082015261474c60a08401613bbf565b60a082015261475d60c08401613bbf565b60c082015260e08301518281111561477457600080fd5b6147808782860161416e565b60e083015250835250614798905083602084016145a3565b60208201526125ce836101808401614642565b600060208083850312156147be57600080fd5b82516001600160401b03808211156147d557600080fd5b818501915085601f8301126147e957600080fd5b81516147f76134d782613493565b81815260059190911b8301840190848101908883111561481657600080fd5b8585015b8381101561484e578051858111156148325760008081fd5b6148408b89838a010161469f565b84525091860191860161481a565b5098975050505050505050565b60006020828403121561486d57600080fd5b81516001600160401b0381111561488357600080fd5b61193f8482850161469f565b6001600160a01b0392831681529116602082015260400190565b6000608082840312156148bb57600080fd5b6148c3612351565b905081516148d081612323565b815260208201516148e081612323565b602082015260408201516148f381612323565b6040820152606082015161254c81612323565b60006080828403121561491857600080fd5b6108dc83836148a9565b6001600160a01b03881681526101608101614940602083018961326d565b61494d60a083018861283a565b8560e0830152846101008301528361012083015282151561014083015298975050505050505050565b60006060828403121561498857600080fd5b6108dc8383613a77565b6001600160a01b0388811682526101808201906149b2602084018a61326d565b87811660a0840152861660c083015260e082018590526149d661010083018561283a565b61075961014083018461283a565b6000806000606084860312156149f957600080fd5b8351925060208401519150604084015190509250925092565b6001600160a01b038981168252610200820190614a32602084018b61326d565b614a3f60a084018a6139ee565b87610160840152866101808401528086166101a084015250614a6084612e85565b836101c08301528215156101e08301529998505050505050505050565b600060208284031215614a8f57600080fd5b5051919050565b60006020808385031215614aa957600080fd5b82516001600160401b03811115614abf57600080fd5b8301601f81018513614ad057600080fd5b8051614ade6134d782613493565b8181526101e09182028301840191848201919088841115614afe57600080fd5b938501935b83851015614b2457614b158986613c19565b83529384019391850191614b03565b50979650505050505050565b6001600160a01b038481168252610100820190614b5060208401866139ee565b80841660e084015250949350505050565b600060808284031215614b7357600080fd5b614b7b612379565b9050614b878383613e8a565b8152614b968360408401613e8a565b602082015292915050565b60006101608284031215614bb457600080fd5b614bbc61248d565b90508151614bc9816125d9565b808252506020820151602082015260408201516040820152614bee8360608401614b61565b6060820152614c008360e08401614b61565b608082015292915050565b60008183036103a0811215614c1f57600080fd5b614c27612448565b9150614c3384846148a9565b82526080830151602083015260a0830151604083015261010060bf1982011215614c5c57600080fd5b50614c65612379565b614c728460c08501614b61565b8152614c82846101408501614b61565b60208201526060820152614c9a836101c08401614ba1565b6080820152614cad836103208401613a77565b60a0820152614cbf6103808301613a6c565b60c082015292915050565b60006103a08284031215614cdd57600080fd5b6108dc8383614c0b565b600060a08284031215614cf957600080fd5b614d0161248d565b9050815181526020820151602082015260408201516040820152606082015160608201526080820151608082015292915050565b6000818303610160811215614d4957600080fd5b614d51612379565b60c0821215614d5f57600080fd5b614d67612403565b91508351614d7481612323565b82526020840151614d8481612323565b60208301526040840151614d9781612323565b60408301526060840151614daa81612323565b60608301526080840151614dbd81612323565b608083015260a0840151614dd081612323565b60a0830152818152614de58560c08601614ce7565b6020820152949350505050565b600081518084526020808501945080840160005b83811015612b1657614e198783516139ee565b60c0969096019590820190600101614e06565b6001600160a01b03898116825288811660208084019190915288821660408401526101006060840181905288519084018190526000926101208501928a810192855b81811015614e8c578451841686529482019493820193600101614e6e565b50505050508281036080840152614ea38188614df2565b915050614eb360a0830186612765565b60c082019390935260e001529695505050505050565b60006020808385031215614edc57600080fd5b82516001600160401b03811115614ef257600080fd5b8301601f81018513614f0357600080fd5b8051614f116134d782613493565b8181526106a09182028301840191848201919088841115614f3157600080fd5b938501935b83851015614b2457614f488986613eba565b83529384019391850191614f36565b6001600160a01b03861681526103608101614f75602083018761326d565b614f8260a08301866139ee565b614f9161016083018551612772565b6020840151614fa46101c0840182612799565b506040939093015151151561032082015261034001529392505050565b6001600160a01b0385168152608060208201819052600090614fe590830186614df2565b6040830194909452506060015292915050565b6000602080838503121561500b57600080fd5b82516001600160401b0381111561502157600080fd5b8301601f8101851361503257600080fd5b80516150406134d782613493565b8181526103a0918202830184019184820191908884111561506057600080fd5b938501935b83851015614b24576150778986614c0b565b83529384019391850191615065565b600060a0820160018060a01b03808916845260208189168186015260a0604086015282885180855260c087019150828a01945060005b818110156150d8578551835294830194918301916001016150bc565b505085810360608701526150ec8189614df2565b94505050808516608085015250509695505050505050565b6000602080838503121561511757600080fd5b82516001600160401b0381111561512d57600080fd5b8301601f8101851361513e57600080fd5b805161514c6134d782613493565b81815260079190911b8201830190838101908783111561516b57600080fd5b928401925b828410156111605761518288856148a9565b82528482019150608084019350615170565b6000602082840312156151a657600080fd5b81516001600160401b03808211156151bd57600080fd5b9083019061012082860312156151d257600080fd5b6151da61239b565b8251828111156151e957600080fd5b830160e081880312156151fb57600080fd5b615203612448565b61520c82613bbf565b815261521a60208301613bbf565b602082015261522b60408301613bbf565b604082015261523c60608301613bbf565b606082015261524d60808301613bbf565b608082015260a08201518481111561526457600080fd5b6152708982850161416e565b60a08301525060c08201518481111561528857600080fd5b6152948982850161416e565b60c0830152508252506152aa86602085016141dd565b60208201526152bd866101008501613bca565b604082015295945050505050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176108df576108df6152cb565b8181036000831280158383131683831282161715615318576153186152cb565b5092915050565b808201828112600083128015821682158216171561533f5761533f6152cb565b505092915050565b808201808211156108df576108df6152cb565b6000600160ff1b820161536f5761536f6152cb565b5060000390565b634e487b7160e01b600052601260045260246000fd5b6000826153a957634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220c683f7001296f328260871f20ddc6b53f871e54c5a61db1af4dfa5e181263b0764736f6c63430008120033";

type SyntheticsReaderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SyntheticsReaderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SyntheticsReader__factory extends ContractFactory {
  constructor(...args: SyntheticsReaderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SyntheticsReader & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SyntheticsReader__factory {
    return super.connect(runner) as SyntheticsReader__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SyntheticsReaderInterface {
    return new Interface(_abi) as SyntheticsReaderInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SyntheticsReader {
    return new Contract(address, _abi, runner) as unknown as SyntheticsReader;
  }
}
